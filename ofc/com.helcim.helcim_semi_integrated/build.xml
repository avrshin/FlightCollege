<?xml version="1.0" encoding="UTF-8"?>
<!-- ============================================= -->
<!-- com.mckayerp.ftu                             -->
<!-- ============================================= -->

<project name="com.helcim.helcim_semi_integrated" default="dist" basedir=".">

  <description>
    This buildfile is used to build the com.helcim.helcim_semi_integrated subproject within 
    the OFC project.
  </description>

  <!-- set global properties for this build -->
  <property file="../utils_dev/buildCustomization.properties"/>
  <property name="src" value="src"/>
  <!-- property name="looksSrc" value="../looks/src"/ -->
  <property name="build.dir" value="build"/>
  <property name="dist.dir" value="../packages"/>
  <property name="jar.name" value="helcim_semi_integrated.jar"/>

  <!-- set path to include the necessary jar files for javac -->
  <path id="lib.class.path">
    <pathelement path="${classpath}"/>
  </path>
	

  <target name="init" description="initialization target">
    <echo message="=========== Build com.helcim.helcim_semi_integrated"/>
    <!-- create the time stamp -->
    <tstamp/>
    <!-- create the build directory structure used by compile -->
    <mkdir dir="${build.dir}"/>
    <!-- check for the distribution directory -->
    <available file="${dist.dir}" type="dir" property="dist.dir.exists"/>
  </target>

  <target name="makedir" depends="init" unless="dist.dir.exists">
    <!-- create the distribution directory if not available -->
    <mkdir dir="${dist.dir}"/>
  </target>

  
  <target name="compile" depends="makedir">
    <!-- compile the java code from ${src} into ${build.dir} -->
    <javac target="1.8" fork="true" 
    	destdir="${build.dir}" 
    	deprecation="on" 
    	debug="on" 
    	memoryinitialsize="512m" 
    	memorymaximumsize="512m"
    	includeantruntime="false">
      <src path="${src}"/>
      <classpath refid="lib.class.path"/>
      <compilerarg line="-XDignore.symbol.file" />
    </javac>
    <!-- copy all image & sound files from src to the build directory -->
    <copy todir="${build.dir}">
      <fileset dir="${src}">
        <include name="**/images/*"/>
        <include name="**/*.gif"/>
        <include name="**/*.jpg"/>
        <include name="**/*.png"/>
        <include name="**/*.wav"/>
        <include name="**/*.htm"/>
        <include name="**/*.html"/>
        <include name="**/*.properties"/>
        <exclude name="**/package.html"/>
      </fileset>
    </copy>

  </target>


  <!-- =========================================== -->
  <!-- Distribution                                -->
  <!-- =========================================== -->
  <target name="dist" depends="compile">
    <!-- put everything from ${build.dir} into the ${jar.name}.jar file -->
	<jar
	  jarfile="${dist.dir}/${jar.name}" 
	  basedir="${build.dir}"
	  update="true">
	</jar>
  </target>

  <target name="clean">
    <!-- Delete the ${build.dir} directory trees -->
    <delete dir="${build.dir}"/>
    <delete file="${dist.dir}/${jar.name}.jar" failonerror="false"/>
  </target>

</project>
